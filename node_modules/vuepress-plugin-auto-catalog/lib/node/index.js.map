{"version":3,"file":"index.js","sources":["../../src/node/utils.ts","../../src/node/autoCatalog.ts","../../src/node/prepare.ts","../../src/node/plugin.ts"],"sourcesContent":["import { Logger } from \"vuepress-shared/node\";\n\nexport const logger = new Logger(\"vuepress-plugin-auto-catalog\");\n","import { createPage } from \"@vuepress/core\";\nimport { getTitleFromFilename } from \"vuepress-shared/node\";\nimport { logger } from \"./utils.js\";\n\nimport type { App, PageFrontmatter } from \"@vuepress/core\";\nimport type { AutoCatalogOptions } from \"./options.js\";\n\nexport const generateCatalog = async (\n  app: App,\n  {\n    component = \"AutoCatalog\",\n    exclude = [],\n    frontmatter = (): PageFrontmatter => ({}),\n    level = 3,\n  }: AutoCatalogOptions\n): Promise<void> => {\n  const {\n    env: { isDebug },\n    pages,\n  } = app;\n\n  const pathToBeGenerated = new Set<string>();\n  const content = `\\\n<${component}${[1, 2].includes(level) ? ` :level=\"${level}\"` : \"\"} />\n`;\n\n  pages.forEach(({ path: pagePath, pathLocale }) => {\n    let catalogPath = pagePath;\n\n    while (catalogPath !== pathLocale) {\n      catalogPath = catalogPath.replace(/\\/(?:[^/]+\\/?)$/, \"/\");\n\n      if (\n        // not discovered yet\n        !pathToBeGenerated.has(catalogPath) &&\n        // not being excluded\n        exclude.every((pattern) => !catalogPath.match(pattern)) &&\n        // path not found\n        pages.every(({ path }) => path !== catalogPath)\n      ) {\n        if (isDebug) logger.info(`Generating catalog ${catalogPath}}`);\n\n        pathToBeGenerated.add(catalogPath);\n      }\n    }\n  });\n\n  await Promise.all(\n    Array.from(pathToBeGenerated)\n      .map((path) => decodeURI(path))\n      .map((path) => {\n        const [, basename] = /\\/([^/]+)\\/?$/.exec(path) || [];\n        const title = getTitleFromFilename(basename);\n\n        return createPage(app, {\n          frontmatter: {\n            title,\n            ...(frontmatter(path) || {}),\n          },\n          content,\n          path,\n        });\n      })\n  ).then((pages) => {\n    app.pages.push(...pages);\n  });\n};\n","import { createRequire } from \"node:module\";\n\nimport type { App } from \"@vuepress/core\";\n\nconst require = createRequire(import.meta.url);\n\nexport const prepareConfigFile = (\n  app: App,\n  {\n    iconRouteMetaKey,\n    indexRouteMetaKey,\n    orderRouteMetaKey,\n    titleRouteMetaKey,\n  }: Record<string, string>\n): Promise<string> => {\n  const content = `\\\nimport { defineClientConfig } from \"@vuepress/client\";\nimport { defineAsyncComponent, h } from \"vue\";\nimport { hasGlobalComponent } from \"${require.resolve(\n    \"vuepress-shared/client\"\n  )}\";\n\nexport default defineClientConfig({\n  enhance: ({ app }) => {\n    if (!hasGlobalComponent(\"AutoCatalog\", app))\n      app.component(\"AutoCatalog\", () =>\n        h(\n          defineAsyncComponent(\n            () =>\n              import(\"${require.resolve(\n                \"vuepress-plugin-components/client/components/Catalog.js\"\n              )}\")\n          ),\n          {\n            titleGetter: (meta) => meta[\"${titleRouteMetaKey}\"],\n            iconGetter: (meta) => meta[\"${iconRouteMetaKey}\"],\n            orderGetter: (meta) => meta[\"${orderRouteMetaKey}\"],\n            shouldIndex: (meta) => Boolean(meta[\"${indexRouteMetaKey}\"]),\n          }\n        )\n      );\n  },\n});\n`;\n\n  return app.writeTemp(\"auto-catalog/config.js\", content);\n};\n","import { catalogLocales } from \"vuepress-plugin-components\";\nimport { getLocales } from \"vuepress-shared/node\";\nimport { useSassPalettePlugin } from \"vuepress-plugin-sass-palette\";\nimport { generateCatalog } from \"./autoCatalog.js\";\n\nimport type { PageFrontmatter, PluginFunction } from \"@vuepress/core\";\nimport type { AutoCatalogOptions } from \"./options.js\";\nimport { prepareConfigFile } from \"./prepare.js\";\n\nexport const autoCatalogPlugin =\n  ({\n    component = \"AutoCatalog\",\n    exclude = [],\n    frontmatter = (): PageFrontmatter => ({}),\n    getIcon,\n    iconRouteMetaKey = \"i\",\n    getIndex,\n    indexRouteMetaKey = \"I\",\n    level = 3,\n    locales,\n    getOrder,\n    orderRouteMetaKey = \"O\",\n    getTitle,\n    titleRouteMetaKey = \"title\",\n  }: AutoCatalogOptions = {}): PluginFunction =>\n  (app) => {\n    useSassPalettePlugin(app, { id: \"hope\" });\n\n    const shouldRegisterComponent = component === \"AutoCatalog\" || !component;\n\n    return {\n      name: \"vuepress-plugin-auto-catalog\",\n\n      define: (): Record<string, unknown> => ({\n        CATALOG_LOCALES: getLocales({\n          app,\n          name: \"catalog\",\n          default: catalogLocales,\n          config: locales,\n        }),\n      }),\n\n      extendsPage: (page): void => {\n        const data: Record<string, unknown> = {};\n\n        const pageTitle = getTitle?.(page);\n        const pageIcon = getIcon?.(page);\n        const pageOrder = getOrder?.(page);\n        const pageIndex = getIndex?.(page);\n\n        if (pageTitle) data[titleRouteMetaKey] = pageTitle;\n        if (pageIcon) data[iconRouteMetaKey] = pageIcon;\n        if (pageIndex !== false) data[indexRouteMetaKey] = 1;\n        if (pageOrder !== null) data[orderRouteMetaKey] = pageOrder;\n\n        page.routeMeta = { ...page.routeMeta, ...data };\n      },\n\n      onInitialized: async (app): Promise<void> =>\n        generateCatalog(app, { component, exclude, frontmatter, level }),\n\n      ...(shouldRegisterComponent\n        ? {\n            clientConfigFile: () =>\n              prepareConfigFile(app, {\n                titleRouteMetaKey,\n                iconRouteMetaKey,\n                indexRouteMetaKey,\n                orderRouteMetaKey,\n              }),\n          }\n        : {}),\n    };\n  };\n"],"names":["logger","Logger","generateCatalog","app","component","exclude","frontmatter","level","isDebug","pages","pathToBeGenerated","content","pagePath","pathLocale","catalogPath","pattern","path","basename","title","getTitleFromFilename","createPage","require","createRequire","prepareConfigFile","iconRouteMetaKey","indexRouteMetaKey","orderRouteMetaKey","titleRouteMetaKey","autoCatalogPlugin","getIcon","getIndex","locales","getOrder","getTitle","useSassPalettePlugin","getLocales","catalogLocales","page","data","pageTitle","pageIcon","pageOrder","pageIndex"],"mappings":"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"}